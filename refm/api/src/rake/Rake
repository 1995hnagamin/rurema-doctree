= module Rake

Rake の主要なモジュールです。

== Singleton Methods

--- application -> Rake::Application

現在の Rake アプリケーションを返します。

--- application=(app)

現在の Rake アプリケーションをセットします。

@param app [[c:Rake::Application]] のインスタンスを指定します。

#@samplecode
# Rakefile での記載例とする

require 'pp'

task default: :test_rake_app
task :test_rake_app do
  app = Rake::Application.new
  app.tty_output = true
  Rake.application = app
  pp Rake.application
end

# => #<Rake::Application:0x34cd580
#     @default_loader=#<Rake::DefaultLoader:0x34cd4a8>,
#     @imported=[],
#     @last_description=nil,
#     @loaders=
#      {".rb"=>#<Rake::DefaultLoader:0x34cd448>,
#       ".rf"=>#<Rake::DefaultLoader:0x34cd3d0>,
#       ".rake"=>#<Rake::DefaultLoader:0x34cd358>},
#     @name="rake",
#     @original_dir="/path/to/file",
#     @pending_imports=[],
#     @rakefile=nil,
#     @rakefiles=["rakefile", "Rakefile", "rakefile.rb", "Rakefile.rb"],
#     @rules=[],
#     @scope=LL(),
#     @tasks={},
#     @terminal_columns=0,
#     @top_level_tasks=[],
#     @tty_output=true>
#@end

--- original_dir -> String

Rake アプリケーションを開始したディレクトリを返します。

== Constants

--- EARLY -> Rake::EarlyTime

[[c:Rake::EarlyTime]] の唯一のインスタンスを返します。

--- EMPTY_TASK_ARGS -> Rake::TaskArguments

空のタスクに渡すパラメータをあらわす定数です。


= class Rake::RuleRecursionOverflowError < StandardError

ルールのネストが多すぎる場合に発生する例外です。

= class Rake::TaskArgumentError < ArgumentError

間違ったタスクの定義を行った場合に発生する例外です。

