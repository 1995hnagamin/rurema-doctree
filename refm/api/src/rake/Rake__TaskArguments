= class Rake::TaskArguments
include Enumerable

タスクに渡されるパラメータの管理をするクラスです。

== Public Instance Methods

--- [](key) -> object

与えられたパラメータ名に対応する値を返します。

@param key パラメータの名前を指定します。

--- each{|key, val| ... } -> Hash

自身に含まれるパラメータ名とそれに対応する値をブロックパラメータとしてブロックを評価します。

@see [[m:Hash#each]]

--- inspect -> String
--- to_s -> String

自身を人間に読みやすい文字列にして返します。

@see [[m:Hash#inspect]]

--- names -> Array

パラメータ名のリストを返します。

--- new_scope(names) -> Rake::TaskArguments

与えられたパラメータ名のリストを使用して新しい [[c:Rake::TaskArguments]] を作成します。

@param names パラメータ名のリストを指定します。

--- to_hash -> Hash

パラメータ名と対応する値を格納したハッシュを返します。

--- with_defaults(defaults) -> Hash

パラメータにデフォルト値をセットします。

@param defaults デフォルト値として使用するキーと値を格納したハッシュを指定します。

#@samplecode
# Rakefile での記載例とする

task default: :test_rake_app
task :test_rake_app do
  arguments = Rake::TaskArguments.new(["name1", "name2"], ["value1", "value2"])
  arguments.to_hash                                        # => {:name1=>"value1", :name2=>"value2"}
  arguments.with_defaults({ default_key: "default_value"}) # => {:default_key=>"default_value", :name1=>"value1", :name2=>"value2"}
  arguments.to_hash                                        # => {:default_key=>"default_value", :name1=>"value1", :name2=>"value2"}
end
#@end

== Protected Instance Methods

--- lookup(name) -> object

与えられた名前に対応する値を返します。

@param name パラメータ名を指定します。

== Singleton Methods

--- new(names, values, parent = nil)

自身を初期化します。

@param names パラメータの名前のリストを指定します。

@param values パラメータの値のリストを指定します。

@param parent 親となる [[c:Rake::TaskArguments]] を指定します。

