
= class TkNamespace < TkObject
extend Tk

== Class Methods

--- id2obj(id)
#@todo

--- new(name = nil, parent = nil)
#@todo

--- children(*args)
#@todo

--- code(script = Proc.new)
#@todo

--- current_path
#@todo

--- current
#@todo

--- delete(*ns_list)
#@todo

--- ensemble_create(*keys)
#@todo

--- ensemble_configure(cmd, slot, value = Tk::None)
#@todo

--- ensemble_configinfo(cmd, slot = nil))
#@todo

--- ensemble_exist?(cmd)
#@todo

--- eval(namespace, cmd = Proc.new, *args)
#@todo

--- exist?(ns)
#@todo

--- export(*patterns)
#@todo

--- export_with_clear(*patterns)
#@todo

--- forget(*patterns)
#@todo

--- import(*patterns)
#@todo

--- force_import(*patterns)
#@todo

--- inscope(namespace, script, *args)
#@todo

--- origin(cmd)
#@todo

--- parent(namespace = Tk::None)
#@todo

--- get_path
#@todo

--- set_path(*namespace_list)
#@todo

--- qualifiers(str)
#@todo

--- tail(str)
#@todo

--- upvar(namespace, *var_pairs)
#@todo

--- get_unknown_handler
#@todo

--- set_unknown_handler(cmd = Proc.new)
#@todo

--- which(name)
#@todo

--- which_command(name)
#@todo

--- which_variable(name)
#@todo

== Instance Methods

--- install_cmd(cmd)
#@todo

--- __tk_call(*args)
#@todo

--- __tk_call_without_enc(*args)
#@todo

--- __tk_call_with_enc(*args)
#@todo

--- tk_call(*args)
--- ns_tk_call(*args)
#@todo

--- tk_call_without_enc(*args)
--- ns_tk_call_without_enc(*args)
#@todo

--- tk_call_with_enc(*args)
--- ns_tk_call_with_enc(*args)
#@todo

--- children
#@todo

--- code(script = Proc.new)
#@todo

--- current_path
#@todo

--- current_namespace
--- current
#@todo

--- delete
#@todo

--- eval(cmd = Proc.new, *args)
#@todo

--- exist?
#@todo

--- export
#@todo

--- export_with_clear
#@todo

--- forget
#@todo

--- import
#@todo

--- force_import
#@todo

--- inscope(script, *args)
#@todo

--- parent
#@todo

--- set_path
#@todo

--- upvar(*var_pairs)
#@todo

== Constants

--- TkCommandNames
#@todo

--- Tk_Namespace_ID_TBL
#@todo

--- Tk_Namespace_ID
#@todo

--- Tk_NsCode_RetObjID_TBL
#@todo

--- Global
#@todo

